@layer theme, base, components, utilities;

/*
Import order matters for Tailwind CSS v4 compatibility

External @import statements MUST come before Tailwind imports because:
1. CSS spec requires ALL @import statements to precede other CSS rules (except @charset/@layer)
2. Tailwind CSS v4 expands its imports into thousands of lines of generated utility CSS
3. If external imports come after Tailwind imports, they end up after the generated CSS
4. This causes PostCSS to throw: "@import must precede all other statements"

The correct order is:
- @layer declarations (empty)
- External @import statements (fonts, icons, etc.)
- Tailwind @import statements (theme, utilities)
- @config directives
- Regular CSS rules
*/

/* External imports must come first, before Tailwind imports */
@import url("../../node_modules/@vscode/codicons/dist/codicon.css");
/* Font import removed - @fontsource/azeret-mono not in dependencies */
/* @import url("../node_modules/@fontsource/azeret-mono/index.css"); */

/* Tailwind imports come after external imports */
@import "tailwindcss/theme.css" layer(theme);
/* Disable Tailwind's CSS reset to preserve existing styles */
/* @import "tailwindcss/preflight.css" layer(base); */
@import "tailwindcss/utilities.css" layer(utilities);

/* Configuration directives come after all imports */
@config "../tailwind.config.mjs";

/* ==========================================================================
   Focus Indicators - WCAG 2.1 Level AA Compliant
   ========================================================================== */

/* Textarea focus styles */
textarea:focus {
	outline: 2px solid var(--vscode-focusBorder, #007fd4);
	outline-offset: 1px;
}

/* Button focus styles - use focus-visible for keyboard-only focus */
button:focus-visible,
vscode-button::part(control):focus-visible {
	outline: 2px solid var(--vscode-focusBorder, #007fd4);
	outline-offset: 2px;
}

/* Remove default outline on mouse click, but keep for keyboard navigation */
button:focus:not(:focus-visible),
vscode-button::part(control):focus:not(:focus-visible) {
	outline: none;
}

/* Interactive divs with role="button" */
div[role="button"]:focus-visible {
	outline: 2px solid var(--vscode-focusBorder, #007fd4);
	outline-offset: 2px;
}

div[role="button"]:focus:not(:focus-visible) {
	outline: none;
}

/* Links focus styles */
a:focus-visible {
	outline: 2px solid var(--vscode-focusBorder, #007fd4);
	outline-offset: 2px;
}

a:focus:not(:focus-visible) {
	outline: none;
}

/* Input fields focus styles */
input:focus-visible,
select:focus-visible {
	outline: 2px solid var(--vscode-focusBorder, #007fd4);
	outline-offset: 1px;
}

/* ==========================================================================
   Screen Reader Only Utility
   ========================================================================== */

/* 
 * Hide content visually but keep it accessible to screen readers.
 * Used for ARIA live regions and skip navigation links.
 */
.sr-only {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border-width: 0;
}

/* Show sr-only content when it receives focus (for skip links) */
.sr-only:focus {
	position: fixed;
	top: 0;
	left: 0;
	width: auto;
	height: auto;
	padding: 1rem;
	margin: 0;
	overflow: visible;
	clip: auto;
	white-space: normal;
	background: var(--vscode-editor-background);
	color: var(--vscode-editor-foreground);
	border: 2px solid var(--vscode-focusBorder);
	z-index: 1000;
}

/*
Use vscode native scrollbar styles
https://github.com/gitkraken/vscode-gitlens/blob/b1d71d4844523e8b2ef16f9e007068e91f46fd88/src/webviews/apps/home/home.scss
*/

html {
	height: 100%;
	width: 100%;
}

body {
	margin: 0;
	padding: 0;
	line-height: 1.25;
	height: 100%;
	width: 100%;
}

#root {
	height: 100%;
	width: 100%;
}

body.scrollable,
.scrollable,
body.code-block-scrollable,
.code-block-scrollable {
	border-color: transparent;
	transition: border-color 0.7s linear;
}

body:hover.scrollable,
body:hover .scrollable,
body:focus-within.scrollable,
body:focus-within .scrollable,
body:hover.code-block-scrollable,
body:hover .code-block-scrollable,
body:focus-within.code-block-scrollable,
body:focus-within .code-block-scrollable {
	border-color: var(--vscode-scrollbarSlider-background);
	transition: none;
}

.scrollable::-webkit-scrollbar-corner {
	background-color: transparent !important;
}

.scrollable::-webkit-scrollbar-thumb {
	background-color: transparent;
	border-color: inherit;
	border-right-style: inset;
	border-right-width: calc(100vw + 100vh);
	border-radius: unset !important;
}

.scrollable::-webkit-scrollbar-thumb:hover {
	border-color: var(--vscode-scrollbarSlider-hoverBackground);
}

.scrollable::-webkit-scrollbar-thumb:active {
	border-color: var(--vscode-scrollbarSlider-activeBackground);
}

/*
Fix VSCode ignoring webkit scrollbar modifiers
https://github.com/microsoft/vscode/issues/213045
*/
@supports selector(::-webkit-scrollbar) {
	html {
		scrollbar-color: unset;
	}
}

/*
The above scrollbar styling uses some transparent background color magic to accomplish its animation. However this doesn't play nicely with SyntaxHighlighter, so we need to set a background color for the code blocks' horizontal scrollbar. This actually has the unintended consequence of always showing the scrollbar which I prefer since it makes it more obvious that there is more content to scroll to.
*/

.code-block-scrollable::-webkit-scrollbar-track {
	background: transparent;
}

.code-block-scrollable::-webkit-scrollbar-thumb {
	background-color: var(--vscode-scrollbarSlider-background);
	border-radius: 5px;
	border: 2px solid transparent;
	background-clip: content-box;
}

.code-block-scrollable::-webkit-scrollbar-thumb:hover {
	background-color: var(--vscode-scrollbarSlider-hoverBackground);
}

.code-block-scrollable::-webkit-scrollbar-thumb:active {
	background-color: var(--vscode-scrollbarSlider-activeBackground);
}

.code-block-scrollable::-webkit-scrollbar-corner {
	background-color: transparent;
}

/*
Dropdown label
https://github.com/microsoft/vscode-webview-ui-toolkit/tree/main/src/dropdown#with-label
*/
.dropdown-container {
	box-sizing: border-box;
	display: flex;
	flex-flow: column nowrap;
	align-items: flex-start;
	justify-content: flex-start;
}
.dropdown-container label {
	display: block;
	color: var(--vscode-foreground);
	cursor: pointer;
	font-size: var(--vscode-font-size);
	line-height: normal;
	margin-bottom: 2px;
}

/* Fix scrollbar in dropdown */

vscode-dropdown::part(listbox) {
	border-color: var(--vscode-scrollbarSlider-background);
	transition: none;
	scrollbar-color: var(--vscode-scrollbarSlider-background) transparent;
}

/* Faded icon buttons in textfields */

.input-icon-button {
	cursor: pointer;
	opacity: 0.65;
}
.input-icon-button:hover {
	opacity: 1;
}
.input-icon-button.disabled {
	cursor: not-allowed;
	opacity: 0.4;
}
.input-icon-button.disabled:hover {
	opacity: 0.4;
}

/* Context mentions */

.mention-context-textarea-highlight {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	color: transparent;
	/* padding: 0.5px;
	margin: -0.5px;
	position: relative;
	bottom: -0.5px; */
}

.mention-context-highlight {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
}

.mention-context-highlight-with-shadow {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
}

.slash-command-match-textarea-highlight {
	background-color: color-mix(in srgb, var(--vscode-focusBorder) 30%, transparent);
	border-radius: 3px;
	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-focusBorder) 30%, transparent);
	color: transparent;
}

/* ==========================================================================
   MarieCoder Brand Utilities
   ========================================================================== */

/**
 * Branded gradient backgrounds and buttons
 */
.marie-brand-gradient {
	background: linear-gradient(135deg, #6b46c1 0%, #9333ea 100%);
}

.marie-brand-gradient-text {
	background: linear-gradient(135deg, #6b46c1 0%, #9333ea 100%);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	background-clip: text;
}

/**
 * Branded button styles
 * Use for accent actions that need extra emphasis
 */
.marie-coder-accent {
	background: linear-gradient(135deg, #6b46c1 0%, #9333ea 100%) !important;
	border: 1px solid #6b46c1 !important;
	color: #ffffff !important;
	transition: all 150ms ease-in-out;
}

.marie-coder-accent:hover {
	background: linear-gradient(135deg, #7b4fd4 0%, #a03bf0 100%) !important;
	border-color: #7b4fd4 !important;
	transform: translateY(-1px);
	box-shadow: 0 4px 8px rgba(107, 70, 193, 0.3);
}

.marie-coder-accent:active {
	background: linear-gradient(135deg, #5a3a9f 0%, #7c29c8 100%) !important;
	border-color: #5a3a9f !important;
	transform: translateY(0);
	box-shadow: 0 2px 4px rgba(107, 70, 193, 0.2);
}

.marie-coder-accent:disabled {
	background: color-mix(in srgb, #6b46c1 30%, transparent) !important;
	border-color: color-mix(in srgb, #6b46c1 30%, transparent) !important;
	opacity: 0.5;
	cursor: not-allowed;
	transform: none;
	box-shadow: none;
}

/**
 * Subtle branded background
 * Use for cards and containers that need gentle branding
 */
.marie-coder-subtle {
	background: color-mix(in srgb, #6b46c1 8%, var(--vscode-editor-background)) !important;
	border: 1px solid color-mix(in srgb, #6b46c1 20%, transparent) !important;
}

.marie-coder-subtle:hover {
	background: color-mix(in srgb, #6b46c1 12%, var(--vscode-editor-background)) !important;
	border-color: color-mix(in srgb, #6b46c1 30%, transparent) !important;
}

/**
 * Clean, minimal styling
 * Use for refined, uncluttered interfaces
 */
.marie-kondo-clean {
	transition: all 150ms ease-in-out;
	border-radius: 4px;
}

.marie-kondo-clean:hover {
	transform: translateY(-1px);
}

.marie-kondo-clean:active {
	transform: translateY(0);
}

/**
 * Card styles with branded accents
 */
.marie-card {
	background: color-mix(in srgb, var(--vscode-toolbar-hoverBackground) 65%, transparent);
	border: 1px solid var(--vscode-panel-border);
	border-radius: 4px;
	padding: 12px;
	transition: all 150ms ease-in-out;
}

.marie-card:hover {
	background: color-mix(in srgb, var(--vscode-toolbar-hoverBackground) 100%, transparent);
	border-color: color-mix(in srgb, #6b46c1 30%, var(--vscode-panel-border));
}

.marie-card.branded {
	border-left: 3px solid #6b46c1;
}

/**
 * Focus ring with brand color
 */
.marie-focus-ring:focus-visible {
	outline: 2px solid #6b46c1;
	outline-offset: 2px;
}
